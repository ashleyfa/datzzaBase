/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package datzzabase;

import java.awt.CardLayout;

/**
 *
 * @author FAGARAGAN
 */
public class PizzaOrder extends javax.swing.JFrame {
    private final CardLayout layCard;
    private final CardLayout orderCard;
   
    /**
     * Creates new form PizzaOrder
     */
    public PizzaOrder() {
        initComponents();
        layCard = new CardLayout();
        mainPanel.setLayout(layCard);
        mainPanel.add("HomePanel", HomePanel);
        mainPanel.add("AboutPanel", AboutPanel);
        mainPanel.add("MenuPanel", MenuPanel);
        mainPanel.add("mainOrderPanel", mainOrderPanel);
        mainPanel.add("SideDishPanel", SideDishPanel);
        mainPanel.add("PizzaPanel", PizzaPanel);
        mainPanel.add("DrinksPanel", DrinksPanel);
        mainPanel.add("PastaPanel", PastaPanel);
        mainPanel.add("ByopPanel", ByopPanel);
        
        orderCard = new CardLayout();
        mainOrderPanel.setLayout(orderCard);
        mainOrderPanel.add("OrderPanel", OrderPanel);
        mainOrderPanel.add("OrderSideDishPanel", OrderSideDishPanel);
        mainOrderPanel.add("OrderPastaPanel", OrderPastaPanel);
        mainOrderPanel.add("OrderChickenPanel", OrderChickenPanel);
    }
    
    public void goAboutPanel(){
        layCard.show(mainPanel, "AboutPanel");
    }
    public void goHomePanel(){
        layCard.show(mainPanel, "HomePanel");
    } 
    public void goOrderPanel(){
        layCard.show(mainPanel, "mainOrderPanel");
    } 
    public void goMenuPanel(){
        layCard.show(mainPanel, "MenuPanel");
    } 
    public void goSideDishPanel(){
        layCard.show(mainPanel, "SideDishPanel");
    }
    public void goPizzaPanel(){
        layCard.show(mainPanel, "PizzaPanel");
    }
    public void goDrinksPanel(){
        layCard.show(mainPanel, "DrinksPanel");
    }
    public void goPastaPanel(){
        layCard.show(mainPanel, "PastaPanel");
    }
    public void goByopPanel(){
        layCard.show(mainPanel, "ByopPanel");
    }
    public void goOrderPizzaPanel(){
        orderCard.show(mainOrderPanel, "OrderPizzaPanel");
    }
    public void goOrderChickenPanel(){
        orderCard.show(mainOrderPanel, "OrderChickenPanel");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        homeAboutButton = new javax.swing.JButton();
        homeMenuButton = new javax.swing.JButton();
        homeOrderButton = new javax.swing.JButton();
        homeBG = new javax.swing.JLabel();
        ByopPanel = new javax.swing.JPanel();
        byopBackButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        Toppings = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        byopBG = new javax.swing.JLabel();
        DrinksPanel = new javax.swing.JPanel();
        drinksBackButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        drinksBG = new javax.swing.JLabel();
        AboutPanel = new javax.swing.JPanel();
        aboutBackButton = new javax.swing.JButton();
        aboutBG = new javax.swing.JLabel();
        MenuPanel = new javax.swing.JPanel();
        menuBackButton = new javax.swing.JButton();
        menuByopButton = new javax.swing.JButton();
        menuPizzaButton = new javax.swing.JButton();
        menuDrinksButton = new javax.swing.JButton();
        menuSideDishButton = new javax.swing.JButton();
        menuPastaButton = new javax.swing.JButton();
        menuBG = new javax.swing.JLabel();
        PizzaPanel = new javax.swing.JPanel();
        pizzaBackButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        pizzaBG = new javax.swing.JLabel();
        PastaPanel = new javax.swing.JPanel();
        pastaBackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        pastaBG = new javax.swing.JLabel();
        SideDishPanel = new javax.swing.JPanel();
        sidedishBackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        sidedishBG = new javax.swing.JLabel();
        mainOrderPanel = new javax.swing.JPanel();
        OrderPastaPanel = new javax.swing.JPanel();
        PastaTable = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        NoddleTable = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        CustomPastaTable = new javax.swing.JScrollPane();
        jTable14 = new javax.swing.JTable();
        orderNextButton = new javax.swing.JButton();
        orderPanelBackButton = new javax.swing.JButton();
        orderPastaBG = new javax.swing.JLabel();
        OrderChickenPanel = new javax.swing.JPanel();
        orderChickenSizeTable = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        orderChickenTable = new javax.swing.JScrollPane();
        OrderChickenTable = new javax.swing.JTable();
        orderChickenNextButton = new javax.swing.JButton();
        orderChickenBackButton = new javax.swing.JButton();
        orderChickenBG = new javax.swing.JLabel();
        OrderSideDishPanel = new javax.swing.JPanel();
        orderSideDishDipTable = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        orderSideDishTable = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        orderSideDishNext = new javax.swing.JButton();
        orderSideDishBack = new javax.swing.JButton();
        orderSideDishBG = new javax.swing.JLabel();
        OrderPanel = new javax.swing.JPanel();
        orderBackButton = new javax.swing.JButton();
        CInfo = new javax.swing.JLabel();
        firstName = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        Street = new javax.swing.JLabel();
        streetField = new javax.swing.JTextField();
        City = new javax.swing.JLabel();
        cityField = new javax.swing.JTextField();
        State = new javax.swing.JLabel();
        StateField = new javax.swing.JTextField();
        ZipcodeField = new javax.swing.JTextField();
        Zipcode = new javax.swing.JLabel();
        PNum = new javax.swing.JLabel();
        PNumField = new javax.swing.JTextField();
        cOrder = new javax.swing.JLabel();
        OrderNextButton = new javax.swing.JButton();
        orderBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Datzzabase- - Pizza Order Form");
        setAutoRequestFocus(false);
        setName("frame0"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setLayout(new java.awt.CardLayout());

        HomePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeAboutButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        homeAboutButton.setText("ABOUT");
        homeAboutButton.setBorderPainted(false);
        homeAboutButton.setContentAreaFilled(false);
        homeAboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeAboutButtonActionPerformed(evt);
            }
        });
        HomePanel.add(homeAboutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, 50));

        homeMenuButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        homeMenuButton.setText("MENU");
        homeMenuButton.setBorderPainted(false);
        homeMenuButton.setContentAreaFilled(false);
        homeMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuButtonActionPerformed(evt);
            }
        });
        HomePanel.add(homeMenuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 140, 50));

        homeOrderButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        homeOrderButton.setText("ORDER");
        homeOrderButton.setBorderPainted(false);
        homeOrderButton.setContentAreaFilled(false);
        homeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeOrderButtonActionPerformed(evt);
            }
        });
        HomePanel.add(homeOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 150, 50));

        homeBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/MENU.png"))); // NOI18N
        HomePanel.add(homeBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(HomePanel, "card2");

        ByopPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        byopBackButton.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        byopBackButton.setText("BACK");
        byopBackButton.setBorderPainted(false);
        byopBackButton.setContentAreaFilled(false);
        byopBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byopBackButtonActionPerformed(evt);
            }
        });
        ByopPanel.add(byopBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 120, 40));

        Toppings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Kalua Pork"},
                {"Ham"},
                {"Spam"},
                {"Salami"},
                {"Bacon"},
                {"Chicken"},
                {"Beef Brisket"},
                {"Chariza"},
                {"Italian Sausage"},
                {"Black Olives"},
                {"Green Olives"},
                {"Tomatoes"},
                {"Cilantro"},
                {"Fresh Spinach"},
                {"Fresh Basil"},
                {"Green Pepper"},
                {"Green Onion"},
                {"Mushrooms"},
                {"Pineapple"},
                {"Jalapenos"},
                {"Anchovies"},
                {"Peperoncini"},
                {"Artichokes"},
                {"Taco Beef"},
                {"BBQ Chicken"},
                {"Spicy Chicken"},
                {"Ricotta Cheese"},
                {"Shrimp"},
                {"Portabello"},
                {"Provolone"},
                {"Garlic"},
                {"Philly Steak"},
                {"Feta Cheese"},
                {"Cheddar Cheese"},
                {"Mozzarella Cheese"}
            },
            new String [] {
                "Toppings"
            }
        ));
        Toppings.setSelectionBackground(new java.awt.Color(240, 240, 240));
        Toppings.setSelectionForeground(new java.awt.Color(255, 0, 51));
        jScrollPane6.setViewportView(Toppings);

        ByopPanel.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 440, 220));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("*Prices may vary depending on the amount of topping by the size of pizza");
        ByopPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 460, 20));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Think & Crispy/Cheesy Stuffed/Pan/Hand Toss", "8\"", "1.45"},
                {"", "10\"", "2.55"},
                {"", "12\"", "3.25"},
                {"", "14\"", "4.15"},
                {null, "16\"", "4.65"}
            },
            new String [] {
                "Crust", "Size", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.setSelectionBackground(new java.awt.Color(240, 240, 240));
        jTable6.setSelectionForeground(new java.awt.Color(204, 0, 0));
        jTable6.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(jTable6);
        if (jTable6.getColumnModel().getColumnCount() > 0) {
            jTable6.getColumnModel().getColumn(1).setMinWidth(70);
            jTable6.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable6.getColumnModel().getColumn(1).setMaxWidth(70);
            jTable6.getColumnModel().getColumn(2).setMinWidth(70);
            jTable6.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable6.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        ByopPanel.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 440, 120));

        byopBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/BYOP.png"))); // NOI18N
        byopBG.setText("jLabel2");
        ByopPanel.add(byopBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(ByopPanel, "card10");

        DrinksPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        drinksBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        drinksBackButton.setText("BACK");
        drinksBackButton.setBorderPainted(false);
        drinksBackButton.setContentAreaFilled(false);
        drinksBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drinksBackButtonActionPerformed(evt);
            }
        });
        DrinksPanel.add(drinksBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 40));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Root Beer/Brisk Iced Tea/Pepsi/Diet Pepsi", null, null},
                {"Mountain Dew/Sierra Mist/Miranda Orange/Coca-Cola", null, null},
                {"Sprite/Fanta/Diet Coke/Fruit Punch/Dr.Pepper", null, null},
                {null, "12 oz", "1.50"},
                {null, "24 oz", "2.25"},
                {null, "32 oz", "3.05"},
                {null, "1 Litter", "3.65"},
                {null, "2 Litter", "4.05"},
                {null, "6x12 oz", "6.95"},
                {null, null, null},
                {"Fuzz Tea/Minute Maid Lemonade/Dole Orange Juice", "590 ML", "1.50"},
                {"Minute Maid Raspberry Iced Tea/Gatorade/Powerade", null, null},
                {"Minute Maid Pink Lemonade/Starbucks Frappuccino", null, null},
                {"Meadow Gold Bottled Milk", null, null},
                {null, "", null},
                {"Strawberry/Vanilla Milk Shake", "12 oz", "3.75"},
                {null, "24 oz", "4.65"},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Drinks", "Size", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(1).setMinWidth(70);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable3.getColumnModel().getColumn(1).setMaxWidth(70);
            jTable3.getColumnModel().getColumn(2).setMinWidth(70);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable3.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        DrinksPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 80, 450, 360));

        drinksBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/DRINKS.png"))); // NOI18N
        DrinksPanel.add(drinksBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(DrinksPanel, "card8");

        AboutPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aboutBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        aboutBackButton.setText("BACK");
        aboutBackButton.setBorderPainted(false);
        aboutBackButton.setContentAreaFilled(false);
        aboutBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutBackButtonActionPerformed(evt);
            }
        });
        AboutPanel.add(aboutBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 40));

        aboutBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/ABOUT.png"))); // NOI18N
        AboutPanel.add(aboutBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(AboutPanel, "card3");

        MenuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        menuBackButton.setText("BACK");
        menuBackButton.setBorderPainted(false);
        menuBackButton.setContentAreaFilled(false);
        menuBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBackButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(menuBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 120, 50));

        menuByopButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        menuByopButton.setForeground(new java.awt.Color(255, 255, 255));
        menuByopButton.setText("BUILD YOUR OWN PIZZA");
        menuByopButton.setBorderPainted(false);
        menuByopButton.setContentAreaFilled(false);
        menuByopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuByopButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(menuByopButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 320, 60));

        menuPizzaButton.setBorderPainted(false);
        menuPizzaButton.setContentAreaFilled(false);
        menuPizzaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPizzaButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(menuPizzaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 220, 160));

        menuDrinksButton.setBorderPainted(false);
        menuDrinksButton.setContentAreaFilled(false);
        menuDrinksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDrinksButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(menuDrinksButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 220, 160));

        menuSideDishButton.setBorderPainted(false);
        menuSideDishButton.setContentAreaFilled(false);
        menuSideDishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSideDishButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(menuSideDishButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 220, 170));

        menuPastaButton.setBorderPainted(false);
        menuPastaButton.setContentAreaFilled(false);
        menuPastaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPastaButtonActionPerformed(evt);
            }
        });
        MenuPanel.add(menuPastaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 220, 170));

        menuBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/MENUMENU.png"))); // NOI18N
        MenuPanel.add(menuBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(MenuPanel, "card4");

        PizzaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pizzaBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pizzaBackButton.setText("BACK");
        pizzaBackButton.setBorderPainted(false);
        pizzaBackButton.setContentAreaFilled(false);
        pizzaBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pizzaBackButtonActionPerformed(evt);
            }
        });
        PizzaPanel.add(pizzaBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 40));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Mepmphis BBQ/Philly Cheese Steak", null, null},
                {"Haole/Kanaka/Mexican/Portugee/Pake", null, null},
                {"Texan/Ultimate Meat/Firehouse/Hawaiian Delight", null, null},
                {"Honolulu Hawaiian/New Yorker", null, null},
                {null, "8\"", "8.39"},
                {null, "10\"", "10.75"},
                {null, "12\"", "15.00"},
                {null, "14\"", "18.25"},
                {null, "16\"", null}
            },
            new String [] {
                "Specials", "Size", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setSelectionBackground(new java.awt.Color(240, 240, 240));
        jTable2.setSelectionForeground(new java.awt.Color(204, 0, 51));
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(1).setMinWidth(70);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable2.getColumnModel().getColumn(1).setMaxWidth(70);
            jTable2.getColumnModel().getColumn(2).setMinWidth(70);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable2.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        PizzaPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 440, 180));

        pizzaBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/SIGNATURE_PIZZA.png"))); // NOI18N
        PizzaPanel.add(pizzaBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(PizzaPanel, "card6");

        PastaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pastaBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pastaBackButton.setText("BACK");
        pastaBackButton.setBorderPainted(false);
        pastaBackButton.setContentAreaFilled(false);
        pastaBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastaBackButtonActionPerformed(evt);
            }
        });
        PastaPanel.add(pastaBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 40));

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("*Optional type of pasta: Fettuccini, Penne, Spaghetti, Whole Wheat Linguine, Glutenwise Fusili");
        PastaPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 480, -1));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Creamy Alfredo", "11.99"},
                {"Plain Chicken Breast", "10.99"},
                {"Meatballs", "10.99"}
            },
            new String [] {
                "Pasta", "Price"
            }
        ));
        jTable4.setSelectionBackground(new java.awt.Color(240, 240, 240));
        jTable4.setSelectionForeground(new java.awt.Color(204, 0, 51));
        jTable4.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(1).setMinWidth(70);
            jTable4.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable4.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        PastaPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 420, 80));

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Jambalaya Fettuccini", "17.99"},
                {"Pulled Pork Penne", "14.49"},
                {"Baked Chipotle Bacon Penne", "16.49"},
                {"Ravioli", "15.99"},
                {"Lasagna", "13.99"},
                {"Chicken And Mushroom Fettuccini", "15.49"},
                {"Pesto Chicken Penne", "16.49"},
                {"Seafood Fettuccini", "17.99"},
                {"Pollo Marinara Linguini", "10.49"}
            },
            new String [] {
                "Pasta", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setSelectionBackground(new java.awt.Color(240, 240, 240));
        jTable5.setSelectionForeground(new java.awt.Color(255, 0, 51));
        jTable5.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTable5);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(0).setResizable(false);
            jTable5.getColumnModel().getColumn(1).setResizable(false);
            jTable5.getColumnModel().getColumn(1).setPreferredWidth(70);
        }

        PastaPanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 420, 190));

        pastaBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/PASTA.png"))); // NOI18N
        PastaPanel.add(pastaBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(PastaPanel, "card7");

        SideDishPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidedishBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sidedishBackButton.setText("BACK");
        sidedishBackButton.setBorderPainted(false);
        sidedishBackButton.setContentAreaFilled(false);
        sidedishBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sidedishBackButtonActionPerformed(evt);
            }
        });
        SideDishPanel.add(sidedishBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"New York Cheesecake", "6.99"},
                {"Chocolate Explosion", "7.99"},
                {"Apple Crisp", "7.49"},
                {"Chocolate Brownie", "3.49"},
                {"The Panookie", "6.49"},
                {"Cinnamon Stix", "3.99"},
                {"Fries", "4.29"},
                {"Mashed Potatoes", "3.29"},
                {"Rice", "2.99"},
                {"Stuffed Cheesy Bread", "4.99"},
                {"Stuffed Cheesy Bread with Spinach", "5.49"},
                {"Stuffed Cheesy Bread with Bacon and Jalapenos", "6.00"},
                {"Breadsticks", "3.99"},
                {"Parmesan Bread Bites", "3.99"}
            },
            new String [] {
                "Side Dish", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jTable1.setSelectionForeground(new java.awt.Color(204, 0, 51));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setMinWidth(70);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        SideDishPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 440, 260));

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Buffalo/Spicy Buffalo/Honey Chipotle/Garlic Parmesan", null, null},
                {"Lemon Pepper/Unsauced", "8", "7.49"},
                {null, "14", "12.00"},
                {null, "40", "14.00"}
            },
            new String [] {
                "Chicken", "Size", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable10.getTableHeader().setReorderingAllowed(false);
        jScrollPane11.setViewportView(jTable10);
        if (jTable10.getColumnModel().getColumnCount() > 0) {
            jTable10.getColumnModel().getColumn(1).setMinWidth(70);
            jTable10.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable10.getColumnModel().getColumn(1).setMaxWidth(70);
            jTable10.getColumnModel().getColumn(2).setMinWidth(70);
            jTable10.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable10.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        SideDishPanel.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 440, 100));

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("*Optional Boned/Boneless Chicken Wings");
        SideDishPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 480, -1));

        sidedishBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/SIDE_DISH.png"))); // NOI18N
        SideDishPanel.add(sidedishBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainPanel.add(SideDishPanel, "card9");

        mainOrderPanel.setLayout(new java.awt.CardLayout());

        OrderPastaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Jamabalaya Fettuccini", null},
                {"Pulled Pork Penne", null},
                {"Baked Chiptole Bacon Penne", null},
                {"Ravioli", null},
                {"Lasagna", null},
                {"Chicken And Mushroom Fettuccini", null},
                {"Pesto Chicken Penne", null},
                {"Seafood Fettuccini", null},
                {"Pollo Marinara Linguini", null}
            },
            new String [] {
                "Pasta", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable12.setSelectionBackground(new java.awt.Color(240, 240, 240));
        jTable12.setSelectionForeground(new java.awt.Color(255, 0, 51));
        jTable12.getTableHeader().setReorderingAllowed(false);
        PastaTable.setViewportView(jTable12);
        if (jTable12.getColumnModel().getColumnCount() > 0) {
            jTable12.getColumnModel().getColumn(0).setResizable(false);
            jTable12.getColumnModel().getColumn(1).setResizable(false);
            jTable12.getColumnModel().getColumn(1).setPreferredWidth(70);
        }

        OrderPastaPanel.add(PastaTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 400, 180));

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Penne", null},
                {"Spaghetti", null},
                {"Whole Wheat Linguine", null},
                {"Glutenwise Fusilli", null},
                {"Fetuccini", null}
            },
            new String [] {
                "Type of Noodle", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        NoddleTable.setViewportView(jTable13);
        if (jTable13.getColumnModel().getColumnCount() > 0) {
            jTable13.getColumnModel().getColumn(0).setResizable(false);
            jTable13.getColumnModel().getColumn(1).setResizable(false);
            jTable13.getColumnModel().getColumn(1).setPreferredWidth(70);
        }

        OrderPastaPanel.add(NoddleTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 400, 120));

        jTable14.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Creamy Alfredo", null},
                {"Plain Chicken Breast", null},
                {"Meatballs", null}
            },
            new String [] {
                "Customize Pasta", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        CustomPastaTable.setViewportView(jTable14);
        if (jTable14.getColumnModel().getColumnCount() > 0) {
            jTable14.getColumnModel().getColumn(0).setResizable(false);
            jTable14.getColumnModel().getColumn(1).setResizable(false);
            jTable14.getColumnModel().getColumn(1).setPreferredWidth(70);
        }

        OrderPastaPanel.add(CustomPastaTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 400, 80));

        orderNextButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        orderNextButton.setText("NEXT");
        orderNextButton.setBorderPainted(false);
        orderNextButton.setContentAreaFilled(false);
        OrderPastaPanel.add(orderNextButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 540, 130, 40));

        orderPanelBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        orderPanelBackButton.setText("BACK");
        orderPanelBackButton.setBorderPainted(false);
        orderPanelBackButton.setContentAreaFilled(false);
        OrderPastaPanel.add(orderPanelBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 540, 130, 40));

        orderPastaBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/ORDER1.png"))); // NOI18N
        OrderPastaPanel.add(orderPastaBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainOrderPanel.add(OrderPastaPanel, "card5");

        OrderChickenPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"8 Pieces", null},
                {"14 Pieces", null},
                {"40 Pieces", null}
            },
            new String [] {
                "Size", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.getTableHeader().setReorderingAllowed(false);
        orderChickenSizeTable.setViewportView(jTable11);
        if (jTable11.getColumnModel().getColumnCount() > 0) {
            jTable11.getColumnModel().getColumn(1).setMinWidth(70);
            jTable11.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable11.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        OrderChickenPanel.add(orderChickenSizeTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 400, 90));

        OrderChickenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Buffalo", null},
                {"Spicy Buffalo", null},
                {"Honey Chipotle", null},
                {"Garlic Parmesan",  new Boolean(false)},
                {"Lemon Pepper", null},
                {"Unsauced", null}
            },
            new String [] {
                "Chicken", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        OrderChickenTable.getTableHeader().setReorderingAllowed(false);
        orderChickenTable.setViewportView(OrderChickenTable);
        if (OrderChickenTable.getColumnModel().getColumnCount() > 0) {
            OrderChickenTable.getColumnModel().getColumn(1).setMinWidth(70);
            OrderChickenTable.getColumnModel().getColumn(1).setPreferredWidth(70);
            OrderChickenTable.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        OrderChickenPanel.add(orderChickenTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 400, 130));

        orderChickenNextButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        orderChickenNextButton.setText("NEXT");
        orderChickenNextButton.setBorderPainted(false);
        orderChickenNextButton.setContentAreaFilled(false);
        orderChickenNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderChickenNextButtonActionPerformed(evt);
            }
        });
        OrderChickenPanel.add(orderChickenNextButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 540, 130, 40));

        orderChickenBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        orderChickenBackButton.setText("BACK");
        orderChickenBackButton.setBorderPainted(false);
        orderChickenBackButton.setContentAreaFilled(false);
        OrderChickenPanel.add(orderChickenBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 540, 120, 40));

        orderChickenBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/ORDER1.png"))); // NOI18N
        OrderChickenPanel.add(orderChickenBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainOrderPanel.add(OrderChickenPanel, "card4");

        OrderSideDishPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Teriyaki", null},
                {"Sweet & Sour", null},
                {"Tangy BBQ", null},
                {"Pesto", null},
                {"Jamaican Jerk", null},
                {"Garlic Butter", null},
                {"Buffalo", null},
                {"Chipotle", null},
                {"Ranch", null},
                {"Buffalo Ranch", null},
                {"Cheezy Jalapeno", null},
                {"Honey Mustard", null},
                {"Gravy", null},
                {"Sour Cream", null},
                {null, null}
            },
            new String [] {
                "Dips", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        orderSideDishDipTable.setViewportView(jTable8);
        if (jTable8.getColumnModel().getColumnCount() > 0) {
            jTable8.getColumnModel().getColumn(1).setMinWidth(70);
            jTable8.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable8.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        OrderSideDishPanel.add(orderSideDishDipTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 200, 280));

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"New York Cheesecake",  new Boolean(false)},
                {"Chocolate Explosion", null},
                {"Apple Crisp", null},
                {"Chocolate Brownie Addiction", null},
                {"The Panookie", null},
                {"Cinnamon Stix", null},
                {"Fries", null},
                {"Mashed Potatoes", null},
                {"Rice", null},
                {"Stuffed Cheesy Bread", null},
                {"Stuffed Cheesy Bread with Bacon and Jalapenos", null},
                {"Stuffed Cheesy Bread with Spinach", null},
                {"Breadsticks", null},
                {"Parmesan Bread Bites", null}
            },
            new String [] {
                "Side Dishes", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable7.getTableHeader().setReorderingAllowed(false);
        orderSideDishTable.setViewportView(jTable7);
        if (jTable7.getColumnModel().getColumnCount() > 0) {
            jTable7.getColumnModel().getColumn(1).setMinWidth(70);
            jTable7.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable7.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        OrderSideDishPanel.add(orderSideDishTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 430, 270));

        orderSideDishNext.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        orderSideDishNext.setText("NEXT");
        orderSideDishNext.setBorderPainted(false);
        orderSideDishNext.setContentAreaFilled(false);
        OrderSideDishPanel.add(orderSideDishNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 540, 130, 40));

        orderSideDishBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        orderSideDishBack.setText("BACK");
        orderSideDishBack.setBorderPainted(false);
        orderSideDishBack.setContentAreaFilled(false);
        OrderSideDishPanel.add(orderSideDishBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 540, 140, 40));

        orderSideDishBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/ORDER1.png"))); // NOI18N
        OrderSideDishPanel.add(orderSideDishBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainOrderPanel.add(OrderSideDishPanel, "card3");

        OrderPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderBackButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        orderBackButton.setText("BACK");
        orderBackButton.setBorderPainted(false);
        orderBackButton.setContentAreaFilled(false);
        orderBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBackButtonActionPerformed(evt);
            }
        });
        OrderPanel.add(orderBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 40));

        CInfo.setText("Customer Information");
        OrderPanel.add(CInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        firstName.setText("First/Last Name");
        OrderPanel.add(firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        NameField.setForeground(new java.awt.Color(204, 204, 204));
        NameField.setText("Required");
        OrderPanel.add(NameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 340, -1));

        Street.setText("Street");
        OrderPanel.add(Street, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 40, 20));

        streetField.setForeground(new java.awt.Color(204, 204, 204));
        streetField.setText("Required");
        OrderPanel.add(streetField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 390, -1));

        City.setText("City");
        OrderPanel.add(City, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        cityField.setForeground(new java.awt.Color(204, 204, 204));
        cityField.setText("Required");
        cityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityFieldActionPerformed(evt);
            }
        });
        OrderPanel.add(cityField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 100, -1));

        State.setText("State Initials");
        OrderPanel.add(State, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, -1, -1));

        StateField.setForeground(new java.awt.Color(204, 204, 204));
        StateField.setText("Required");
        OrderPanel.add(StateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 70, -1));

        ZipcodeField.setForeground(new java.awt.Color(204, 204, 204));
        ZipcodeField.setText("Required");
        OrderPanel.add(ZipcodeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, 90, -1));

        Zipcode.setText("Zipcode");
        OrderPanel.add(Zipcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, -1, -1));

        PNum.setText("Phone Number");
        OrderPanel.add(PNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        PNumField.setForeground(new java.awt.Color(204, 204, 204));
        PNumField.setText("Required");
        OrderPanel.add(PNumField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 200, -1));

        cOrder.setText("Customer Order Information");
        OrderPanel.add(cOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        OrderNextButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        OrderNextButton.setText("NEXT");
        OrderNextButton.setBorderPainted(false);
        OrderNextButton.setContentAreaFilled(false);
        OrderNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderNextButtonActionPerformed(evt);
            }
        });
        OrderPanel.add(OrderNextButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 540, 130, 50));

        orderBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/datzzabase/ORDER.png"))); // NOI18N
        OrderPanel.add(orderBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        mainOrderPanel.add(OrderPanel, "card5");

        mainPanel.add(mainOrderPanel, "card11");

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void byopBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byopBackButtonActionPerformed
        // TODO add your handling code here:
        goMenuPanel();
    }//GEN-LAST:event_byopBackButtonActionPerformed

    private void homeAboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeAboutButtonActionPerformed
        // TODO add your handling code here:
        goAboutPanel();
    }//GEN-LAST:event_homeAboutButtonActionPerformed

    private void menuBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBackButtonActionPerformed
        // TODO add your handling code here:
        goHomePanel();
    }//GEN-LAST:event_menuBackButtonActionPerformed

    private void homeMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuButtonActionPerformed
        // TODO add your handling code here:
        goMenuPanel();
    }//GEN-LAST:event_homeMenuButtonActionPerformed

    private void homeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeOrderButtonActionPerformed
        // TODO add your handling code here:
        goOrderPanel();
    }//GEN-LAST:event_homeOrderButtonActionPerformed

    private void drinksBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drinksBackButtonActionPerformed
        // TODO add your handling code here:
        goMenuPanel();
    }//GEN-LAST:event_drinksBackButtonActionPerformed

    private void orderBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBackButtonActionPerformed
        // TODO add your handling code here:
        goHomePanel();
    }//GEN-LAST:event_orderBackButtonActionPerformed

    private void aboutBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutBackButtonActionPerformed
        // TODO add your handling code here:
        goHomePanel();
    }//GEN-LAST:event_aboutBackButtonActionPerformed

    private void menuByopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuByopButtonActionPerformed
        // TODO add your handling code here:
        goByopPanel();
    }//GEN-LAST:event_menuByopButtonActionPerformed

    private void menuPizzaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPizzaButtonActionPerformed
        // TODO add your handling code here:
        goPizzaPanel();
    }//GEN-LAST:event_menuPizzaButtonActionPerformed

    private void menuDrinksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDrinksButtonActionPerformed
        // TODO add your handling code here:
        goDrinksPanel();
    }//GEN-LAST:event_menuDrinksButtonActionPerformed

    private void menuSideDishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSideDishButtonActionPerformed
        // TODO add your handling code here:
        goSideDishPanel();
    }//GEN-LAST:event_menuSideDishButtonActionPerformed

    private void menuPastaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPastaButtonActionPerformed
        // TODO add your handling code here:
        goPastaPanel();
    }//GEN-LAST:event_menuPastaButtonActionPerformed

    private void pastaBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastaBackButtonActionPerformed
        // TODO add your handling code here:
        goMenuPanel();
    }//GEN-LAST:event_pastaBackButtonActionPerformed

    private void sidedishBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sidedishBackButtonActionPerformed
        // TODO add your handling code here:
        goMenuPanel();
    }//GEN-LAST:event_sidedishBackButtonActionPerformed

    private void pizzaBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pizzaBackButtonActionPerformed
        // TODO add your handling code here:
        goMenuPanel();
    }//GEN-LAST:event_pizzaBackButtonActionPerformed

    private void cityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityFieldActionPerformed

    private void orderChickenNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderChickenNextButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderChickenNextButtonActionPerformed

    private void OrderNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderNextButtonActionPerformed
        // TODO add your handling code here:
        goOrderChickenPanel();
    }//GEN-LAST:event_OrderNextButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PizzaOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PizzaOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AboutPanel;
    private javax.swing.JPanel ByopPanel;
    private javax.swing.JLabel CInfo;
    private javax.swing.JLabel City;
    private javax.swing.JScrollPane CustomPastaTable;
    private javax.swing.JPanel DrinksPanel;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JTextField NameField;
    private javax.swing.JScrollPane NoddleTable;
    private javax.swing.JPanel OrderChickenPanel;
    private javax.swing.JTable OrderChickenTable;
    private javax.swing.JButton OrderNextButton;
    private javax.swing.JPanel OrderPanel;
    private javax.swing.JPanel OrderPastaPanel;
    private javax.swing.JPanel OrderSideDishPanel;
    private javax.swing.JLabel PNum;
    private javax.swing.JTextField PNumField;
    private javax.swing.JPanel PastaPanel;
    private javax.swing.JScrollPane PastaTable;
    private javax.swing.JPanel PizzaPanel;
    private javax.swing.JPanel SideDishPanel;
    private javax.swing.JLabel State;
    private javax.swing.JTextField StateField;
    private javax.swing.JLabel Street;
    private javax.swing.JTable Toppings;
    private javax.swing.JLabel Zipcode;
    private javax.swing.JTextField ZipcodeField;
    private javax.swing.JLabel aboutBG;
    private javax.swing.JButton aboutBackButton;
    private javax.swing.JLabel byopBG;
    private javax.swing.JButton byopBackButton;
    private javax.swing.JLabel cOrder;
    private javax.swing.JTextField cityField;
    private javax.swing.JLabel drinksBG;
    private javax.swing.JButton drinksBackButton;
    private javax.swing.JLabel firstName;
    private javax.swing.JButton homeAboutButton;
    private javax.swing.JLabel homeBG;
    private javax.swing.JButton homeMenuButton;
    private javax.swing.JButton homeOrderButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable14;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JPanel mainOrderPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel menuBG;
    private javax.swing.JButton menuBackButton;
    private javax.swing.JButton menuByopButton;
    private javax.swing.JButton menuDrinksButton;
    private javax.swing.JButton menuPastaButton;
    private javax.swing.JButton menuPizzaButton;
    private javax.swing.JButton menuSideDishButton;
    private javax.swing.JLabel orderBG;
    private javax.swing.JButton orderBackButton;
    private javax.swing.JLabel orderChickenBG;
    private javax.swing.JButton orderChickenBackButton;
    private javax.swing.JButton orderChickenNextButton;
    private javax.swing.JScrollPane orderChickenSizeTable;
    private javax.swing.JScrollPane orderChickenTable;
    private javax.swing.JButton orderNextButton;
    private javax.swing.JButton orderPanelBackButton;
    private javax.swing.JLabel orderPastaBG;
    private javax.swing.JLabel orderSideDishBG;
    private javax.swing.JButton orderSideDishBack;
    private javax.swing.JScrollPane orderSideDishDipTable;
    private javax.swing.JButton orderSideDishNext;
    private javax.swing.JScrollPane orderSideDishTable;
    private javax.swing.JLabel pastaBG;
    private javax.swing.JButton pastaBackButton;
    private javax.swing.JLabel pizzaBG;
    private javax.swing.JButton pizzaBackButton;
    private javax.swing.JLabel sidedishBG;
    private javax.swing.JButton sidedishBackButton;
    private javax.swing.JTextField streetField;
    // End of variables declaration//GEN-END:variables
}
